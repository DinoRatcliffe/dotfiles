#!/usr/bin/python

from stem import Signal
import os
import time

from stem import CircStatus
from stem.control import Controller

import argparse

exits = {}

with Controller.from_port(port = 9051) as controller:
  controller.authenticate()

  for circ in controller.get_circuits():
    if circ.status != CircStatus.BUILT:
      continue

    exit_fp, exit_nickname = circ.path[-1]
    exit_desc = controller.get_network_status(exit_fp, None)
    exit_address = exit_desc.address if exit_desc else 'unknown' # get relay IP

    exit_location = controller.get_info('ip-to-country/%s' % exit_address, '').upper()
    exits[exit_address] = exit_location

parser = argparse.ArgumentParser(description='Outputs tor exit nodes')
parser.add_argument('-l', '--locations', action='store_true',
        help="if set return location of exits")
parser.add_argument('-d', '--dedup', action='store_true',
        help="if locations should be deduplicated")
parser.add_argument('-n', '--new', action='store_true',
        help="indicates the script should signal new tor name")

args = parser.parse_args()

if args.new:
    with Controller.from_port(port = 9051) as controller:
      controller.authenticate()
      controller.signal(Signal.NEWNYM)
else:
    values = exits.values() if args.locations else exits.keys()

    if args.dedup:
        values = list(set(values))
        values.sort()

    print("\n".join(values))
